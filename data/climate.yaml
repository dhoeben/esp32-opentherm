# -----------------------------------------------------------
# Unified Climate Entity â€” full control of heating
# -----------------------------------------------------------

- platform: thermostat
  name: "OpenTherm Heating"
  id: ch_climate
  sensor: ha_indoor_temp        # feedback sensor (linked to !secret indoor_entity)
  visual:
    min_temperature: 10
    max_temperature: 30
    temperature_step: 0.5

  min_heating_off_time: 30s
  min_heating_run_time: 30s
  min_idle_time: 30s

  # Optional: allow HA preset profiles
  preset:
    - name: Comfort
      default_target_temperature_low: 21
    - name: Eco
      default_target_temperature_low: 18

  heat_action:
    - lambda: |-
        auto ot = opentherm::OpenThermComponent::get_singleton();
        if (ot == nullptr) return;

        // Use Equitherm to determine proper flow temperature
        float flow_target = opentherm::Equitherm::calculate_target_temp();
        uint16_t raw = (uint16_t)(flow_target * 256.0f);
        uint32_t frame = ot->build_request(opentherm::WRITE_DATA, 0x11, raw);
        ot->send_frame(frame);
        ESP_LOGI("otgw", "ðŸ”¥ Heating ON, flow target = %.1fÂ°C", flow_target);

  idle_action:
    - lambda: |-
        auto ot = opentherm::OpenThermComponent::get_singleton();
        if (ot == nullptr) return;

        // Reduce flow temperature to stop boiler firing
        uint16_t raw = (uint16_t)(10.0f * 256.0f);
        uint32_t frame = ot->build_request(opentherm::WRITE_DATA, 0x11, raw);
        ot->send_frame(frame);
        ESP_LOGI("otgw", "ðŸŒ™ Heating OFF");

