# -----------------------------------------------------------
# Number entity to send target temperature to boiler
# -----------------------------------------------------------

- platform: template
  name: "Boiler Target Temperature"
  id: boiler_target
  icon: mdi:thermostat
  unit_of_measurement: "°C"
  min_value: 10
  max_value: 80
  step: 1.0
  optimistic: true
  initial_value: 21.0
  on_value:
    - lambda: |-
        auto ot = opentherm::OpenThermComponent::get_singleton();
        if (ot != nullptr) {
          uint16_t raw = (uint16_t)(x * 256.0f);      // °C → F8.8
          uint32_t frame = ot->build_request(opentherm::WRITE_DATA, 0x11, raw);
          ot->send_frame(frame);
          ESP_LOGI("otgw", "Sent new setpoint %.1f°C to boiler", x);
        }

- platform: template
  name: "DHW Eco Temperature"
  id: dhw_eco_temp
  min_value: 35
  max_value: 55
  step: 1.0
  restore_value: true
  optimistic: true
  unit_of_measurement: "°C"
  icon: mdi:leaf

  on_value:
    - lambda: |-
        opentherm::DHW::eco_temp_number = (esphome::number::Number *)&id(dhw_eco_temp);

- platform: template
  name: "DHW Normal Temperature"
  id: dhw_normal_temp
  min_value: 40
  max_value: 65
  step: 1.0
  restore_value: true
  optimistic: true
  unit_of_measurement: "°C"
  icon: mdi:fire

  on_value:
    - lambda: |-
        opentherm::DHW::normal_temp_number = (esphome::number::Number *)&id(dhw_normal_temp);

- platform: template
  name: "Boiler DHW Setpoint"
  id: dhw_setpoint
  min_value: 35
  max_value: 65
  step: 0.5
  unit_of_measurement: "°C"
  optimistic: true
  restore_value: true
  initial_value: 55
  on_value:
    - lambda: |-
        auto ot = opentherm::OpenThermComponent::get_singleton();
        if (ot == nullptr) return;
        uint16_t raw = (uint16_t)(x * 256.0f);
        uint32_t frame = opentherm::OpenThermComponent::build_request(
            opentherm::WRITE_DATA, 0x1B, raw);
        ot->send_frame(frame);
        ESP_LOGI("dhw", "Set DHW setpoint to %.1f°C", x);